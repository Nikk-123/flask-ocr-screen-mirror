name: Auto Release and Build EXE with Tesseract

permissions:
  contents: write

on:
  push:
    branches:
      - main  # Change this to your default branch if needed

jobs:
  build:
    runs-on: windows-latest  # Runs on a Windows machine

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          choco install tesseract --yes
        shell: powershell

      - name: Set Tesseract Path
        run: |
          echo "TESSERACT_PATH=C:\Program Files\Tesseract-OCR\tesseract.exe" >> $GITHUB_ENV
          echo "Adding Tesseract to PATH..."
          echo "C:\Program Files\Tesseract-OCR" >> $GITHUB_PATH
        shell: powershell

      - name: Verify Tesseract Installation
        run: tesseract --version
        shell: cmd

      - name: Build EXE with PyInstaller
        run: |
          pyinstaller --onefile --noconsole --hidden-import pytesseract --add-data "C:/Program Files/Tesseract-OCR;tesseract-ocr" app.py
        shell: cmd

      - name: Get Latest Release Version
        id: get_version
        run: |
          echo "Fetching latest release tag..."
          $latest_tag=$(git describe --tags --abbrev=0 2>$null)
          if (-not $latest_tag) { $latest_tag="v0.0.0" }
          echo "Latest tag: $latest_tag"
          
          # Increment version
          $versionParts = $latest_tag -split "\."
          $major = $versionParts[0] -replace "v", ""
          $minor = $versionParts[1]
          $patch = [int]$versionParts[2] + 1
          
          $new_version = "v$major.$minor.$patch"
          echo "NEW_VERSION=$new_version" >> $GITHUB_ENV
        shell: powershell

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.NEW_VERSION }}
          release_name: Release ${{ env.NEW_VERSION }}
          draft: false
          prerelease: false
          files: dist/app.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
