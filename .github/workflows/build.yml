name: Build & Release EXE with Tesseract

on:
  push:
    branches:
      - main  # Change this to your default branch if needed

jobs:
  build:
    runs-on: windows-latest  # Runs on Windows machine

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Install Tesseract OCR
        run: |
          choco install tesseract
        shell: powershell

      - name: Find Tesseract Path
        id: find_tesseract
        run: |
          $tess_path = "C:\Program Files\Tesseract-OCR"
          echo "TESS_PATH=$tess_path" >> $GITHUB_ENV
        shell: powershell

      - name: Build EXE with PyInstaller
        run: |
          pyinstaller --onefile --noconsole --hidden-import pytesseract --add-data "${{ env.TESS_PATH }};tesseract-ocr/" app.py
        shell: cmd

      - name: Find Previous Release Version
        id: get_version
        run: |
          echo "Fetching latest release tag..."
          $latest_tag=$(git tag --sort=-v:refname | head -n 1)
          if [ -z "$latest_tag" ]; then latest_tag="v0.0.0"; fi
          echo "Latest tag: $latest_tag"
          version=$(echo $latest_tag | awk -F. '{print $1"."$2"."$3+1}')
          echo "NEW_VERSION=$version" >> $GITHUB_ENV
        shell: bash

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.NEW_VERSION }}
          release_name: Release ${{ env.NEW_VERSION }}
          draft: false
          prerelease: false
          files: dist/app.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
